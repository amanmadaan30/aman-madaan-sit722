name: Deploy to Production 

on:
  push:
    branches: [ "main" ]   # Only run when code is merged to main

jobs:
  deploy_production:
    runs-on: ubuntu-latest
    env:
      RG_NAME: sit722-prod-rg
      ENV_NAME: sit722-prod-env
      LOCATION: australiasoutheast
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure Container Apps extension
        run: |
          az extension add --name containerapp --upgrade
          az provider register --namespace Microsoft.App

      - name: Ensure Resource Group + Env
        run: |
          az group create -n "$RG_NAME" -l "$LOCATION"
          if ! az containerapp env show -g "$RG_NAME" -n "$ENV_NAME" >/dev/null 2>&1; then
            az containerapp env create -g "$RG_NAME" -n "$ENV_NAME" -l "$LOCATION"
          fi

      - name: Deploy Customer service (prod)
        run: |
          if az containerapp show -g "$RG_NAME" -n customer-service-prod >/dev/null 2>&1; then
            az containerapp update \
              -g "$RG_NAME" -n customer-service-prod \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:${{ env.IMAGE_TAG }}
          else
            az containerapp create \
              -g "$RG_NAME" -n customer-service-prod \
              --environment "$ENV_NAME" \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/customer-service:${{ env.IMAGE_TAG }} \
              --registry-server ${{ secrets.ACR_LOGIN_SERVER }} \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              --target-port 8000 --ingress external \
              --min-replicas 1 --max-replicas 3
          fi

      - name: Deploy Product service (prod)
        run: |
          if az containerapp show -g "$RG_NAME" -n product-service-prod >/dev/null 2>&1; then
            az containerapp update \
              -g "$RG_NAME" -n product-service-prod \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/product-service:${{ env.IMAGE_TAG }}
          else
            az containerapp create \
              -g "$RG_NAME" -n product-service-prod \
              --environment "$ENV_NAME" \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/product-service:${{ env.IMAGE_TAG }} \
              --registry-server ${{ secrets.ACR_LOGIN_SERVER }} \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              --target-port 8000 --ingress external \
              --min-replicas 1 --max-replicas 3
          fi

      - name: Deploy Order service (prod)
        run: |
          if az containerapp show -g "$RG_NAME" -n order-service-prod >/dev/null 2>&1; then
            az containerapp update \
              -g "$RG_NAME" -n order-service-prod \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/order-service:${{ env.IMAGE_TAG }}
          else
            az containerapp create \
              -g "$RG_NAME" -n order-service-prod \
              --environment "$ENV_NAME" \
              --image ${{ secrets.ACR_LOGIN_SERVER }}/order-service:${{ env.IMAGE_TAG }} \
              --registry-server ${{ secrets.ACR_LOGIN_SERVER }} \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              --target-port 8000 --ingress external \
              --min-replicas 1 --max-replicas 3
          fi
